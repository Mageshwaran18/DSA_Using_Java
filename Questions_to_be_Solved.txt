Trie :- 

Number of distinct substrings in a string --> A2Z [ Done ]

Power Sets --> Print all subsets and subsequences Strivers sheet 

Letter Combinations of a Phone Number --> LeetCode :- 17 [ Done ]

LRU Cache --> LeetCode :- 146

Assign the cookies --> LeetCode

Merge intervals --> LeetCode

Minimum platforms --> GFG

Jump Game --> LeetCode 55

Longest Palindromic Subsequence --> LeetCode 516

Longest Common Subsequence --> LeetCode 1143

---- Basic ----

1.Create all subsequence [ Recursion ] 
2.Create all subarrays [ N^2 ]
3.Permutation [ ]


----- Trie -----

1. Insertion , Search , Prefix find , Delete 
2. Longest Word in Dict 
3. Word Break 
4. Count Distinct Substrings 


----- Dynamic Programming -----

1. Fabinoci Series ( Tabulation + Memoization )
2. Climbing Staircase ( Tabulation )
3. Min Cost Climbing Stairs ( Tabulation )
4. Frog ( Tabulation )
5. House Robber ( Tabulation )
6. Coin Changeing ( Tabulation )
7. Unique Path ( 2D array )


----- Arrays -----

Easy :-
    1. Check if the array is sorted and rotated [ LC ]
    2. Remove duplicates from array inplace [ LC ]

Medium :-

    1. Next Permutation 
    2. Length of the Longest Consecutive Sequence [ LC ]
    3. Rotate the matrix [ N X N ] [ LC ]
    4. Rotate the matrix [ N X M ] [ https://workat.tech/problem-solving/practice/matrix-rotation/submissions ]


1.Majority Elements - I
2.Majority Elements - II
3.Two Sum 
4.Three Sum 
5.Dutch National Flag Algo
6.Kadanes Algorithm 
7.Maximum Subarray 
8.Maximum Score from Subarray Minimums

----- Sliding Windows -----

1. Longest substring without repeating characters
2. Maximum Consecutive Ones III
3. Fruits into Basket 
4. Subarray Sum equals K 
5. Binary Subarray with Sum 
6. Maximum Point you can obtain from cards 
7. Longest Substring with K Uniques [ GFG ]


----- Trees -----

1.Vertical Order traversal of a Tree
2.Top view of a Tree
3.Height of a Tree
4.Depth of a Tree
5.Diameter of a Tree


